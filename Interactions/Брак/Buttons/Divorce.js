const { ActionRowBuilder, ButtonBuilder, ButtonStyle } = require('discord.js')
const Members = require('../../../Schemas/Members')
const { channels } = require('../../../Util/Config')
const CheckMarriage = require('../Functions/CheckMarriage')

module.exports = {
  run: async (interaction) => {
    const InvokerData = await Members.findOne({ id: interaction.member.id })
    const InvokerMarriage = InvokerData?.passport?.marriage || null
    const MemberData = await Members.findOne({ id: InvokerMarriage?.id || '' })

    if (!InvokerMarriage) {
      return interaction.reply({
        content: `**–¢—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—à—å –≤ –±—Ä–∞–∫–µ**`,
        ephemeral: true,
      })
    }

    if (
      CheckMarriage(MemberData, false) ||
      MemberData.passport.marriage.id !== interaction.member.id
    ) {
      return interaction.reply({
        content: `**–£—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –≤ –±—Ä–∞–∫–µ —Å —Ç–æ–±–æ–π**`,
        ephemeral: true,
      })
    }

    const MarriagesChannel = interaction.guild.channels.cache.get(
      channels.marriages
    )

    const row = new ActionRowBuilder().addComponents(
      new ButtonBuilder()
        .setCustomId('AcceptDivorce')
        .setEmoji('‚úÖ')
        .setLabel('–°–æ–≥–ª–∞—Å–∏—Ç—å—Å—è')
        .setStyle(ButtonStyle.Success),
      new ButtonBuilder()
        .setCustomId('DenyDivorce')
        .setEmoji('‚ùå')
        .setLabel('–û—Ç–∫–∞–∑–∞—Ç—å')
        .setStyle(ButtonStyle.Danger)
    )

    await MarriagesChannel.send({
      content: `üõë <@${InvokerMarriage.id}>, —Å —Ç–æ–±–æ–π —Ö–æ—á–µ—Ç —Ä–∞–∑–≤–µ—Å—Ç–∏—Å—å ${interaction.member}`,
      components: [row],
    })

    await interaction.reply({
      content: '**–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ**',
      ephemeral: true,
    })
  },
}
